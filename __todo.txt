*recent*
응답 필터 구현, 적용


*todo*
리스트 형식 오브젝트 전부 QListWIdget으로 갈아엎기..
 -> 변수 탭, 응답 탭, 디코더 탭, 사이드뷰
대화창 종료 시 가비지 콜렉터 고려 -> 종료 시 완전삭제하거나 객체 유지

변수 이름 변경 시 이벤트
 -> 빈칸일때  #todo#
VarFunctions에서 오류 검출 시 처리
traverseVar에서 오류 검출 시 처리
separateVar 변수, 함수 입력 미완 시 처리
요청 스레드 진행 중일 때 밴할것
 -> 해당 프로젝트의 변수 탭 조작   --- 오버레이
 -> 진행 중인 프로젝트 이름 변경, 삭제, 닫기   --- 메뉴에서 밴
 -> 진행 중인 요청 이름 변경, 삭제   --- 메뉴에서 밴
 -> 해당 요청의 요청 버튼 텍스트 변경
 -> 요청 중지 함수 연결
프로젝트가 1개만 열려있을 때 프로젝트 끄면 표시할 게 없음 -> 프로그램 재시작
InputDialog 입력 텍스트가 부적절할때 이유 설명 error_text -> checker에서 bool, str반환하기
디코더 버그발견(..)


*bug*
변수 탭 테이블 행 삭제 시 내부 라벨, 레이아웃, 외부 위젯을 삭제해야 하는데 레이아웃 삭제 시에만 프로그램 강제 종료됨
 -> 레이아웃 삭제 미실시 해도 별 문제 없어보여서 일단 유기
변수 이름 겹치면 요청 전환 시 데이터 저장 안됨(터짐)?
리스트형 변수 리스트 테이블에 행이 없을 때 인덱스 표시 안됨(자리만이라도) -> 너비 지정하고 오른쪽 정렬하면 될듯?
리스트형 변수 리스트 테이블 테이블을 선택할 수 없음? == 맨 아래쪽에 행을 추가할 수 없음
이름 유효 검사 시 유효하지 않은 이름 뒤에 공백 추가해도 유효하지 않음




*memo*
변수 범위 지정
Const
 - 값 입력 칸
Number
 - 시작 값 입력 칸
 - 끝 값 입력 칸
 - 간격 값 입력 칸
 - 16진수 체크박스(선택)
List
 - 시작 인덱스 입력 칸(선택)
 - 끝 인덱스 입력 칸(선택)
 - 리스트 테이블

변수 범위 데이터화
Const
 - [값(str)]
Number
 - [시작 값(str), 끝 값(str), 간격 값(str), 16진수?(bool)]
List
 - [시작 인덱스(str), 끝 인덱스(str), 리스트(list<str>)]

변수 범위 텍스트화
Const
 - "값"
Number
 - "Hex(시작 값, 끝 값, 간격 값)"
 - "시작 값, 끝 값, 간격 값"
List
 - "[리스트, 리스트, ...]"
 - "시작 인덱스, 끝 인덱스, [리스트, 리스트, ...]"
  -> 시작 인덱스와 끝 인덱스 둘 중 하나만 선택하면 다른쪽은 각각 0, len(리스트)-1로 설정

변수 링크 인식
Const
 - 값(문자열)
Number
 - 시작 값(숫자)
 - 끝 값(숫자)
 - 간격 값(숫자)
List
 - 시작 인덱스(숫자)
 - 끝 인덱스(숫자)                                                                                                                                           
 - 리스트 요소(문자열)

수식 검사 함수
1. 수식을 사칙연산 기호를 기준으로 분리한다
2. 변수 혹은 숫자가 나온다
3. 변수를 검사한다.
3-1. 수식이 나왔다.(링크O)
 1로
3-2. 변수가 나왔다.(링크O)
 3으로
3-3. 상수가 나왔다.(링크X)
 모든 범위가 숫자로 변환할 수 있으면 성공
 아니면 실패

수식을 어디에 쓸것인가
 - 숫자로 인식하는 모든 곳?
 - 문자열로 인식하는 곳에 있는 Num() 함수?
 - Ex() 함수?

함수를 만들자
 
함수의 형식
 - {{@name/params}}

함수 종류
 - {{$ex/str}} -> num


변수 순회 알고리즘
기존
1. 타겟 url, 헤더, 페이로드 받아옴
2. 변수, 비변수 분리
3. 사용하는 변수 목록 구성
4. 변수 순회 순서 적절하게 결정
5. 백트래킹
6. 각 변수 순회
7. 각 변수 값 딕셔너리화, 반환
8. 타겟 url, 헤더, 페이로드 재조립, 반환
9. 요청 탭에서 요청
변경(함수 생김)
1. 타겟 url, 헤더, 페이로드 받아옴
2. 변수, 함수, 비변수 분리
2-1. 함수에서 변수, 함수, 비변수 분리
3. 저장
3-1. 변수, 비변수, 함수 열림, 함수 닫힘 리스트
3-2. 변수 이름 리스트(앞에서부터)
3-3. 비변수 이름 리스트(앞에서부터)
3-4. 함수 이름 리스트(앞에서부터)
3-5. 2차원 리스트; list[함수 중첩 수][i]=3-4의 함수 이름의 인덱스 저장
4. 사용하는 변수 목록 구성
5. 변수 순회 순서 적절하게 결정
6. 백트래킹
7. 각 변수 순회
8. 각 변수 값 딕셔너리화, 반환
9. 함수 계산
10. 타겟 url, 헤더, 페이로드 재조립, 반환
11. 요청 탭에서 요청

스플릿 하기!
1. 필요 변수
 - 반환 데이터(list<list>[5])
 - 함수 스택
2. 형태소
2-1. {{$
 - 변수 이름 입력 시작
2-2. {{@
 - 함수 입력 시작
2-3. }}
 - 변수, 함수 끝
2-4. /
 - 함수 파라미터 입력 시작
2-5. ex) 일반 문자가 들어갈 곳(*로 표시)
* {{@ * / * {{@ * / * {{$ * }} * }} * }} *
각각 일반 문자, 함수 이름, 함수 파라미터, 함수 이름, 함수 파라미터, 변수 이름, 함수 파라미터, 함수 파라미터, 일반 문자 취급
 -> {{}} 밖에 있으면 일반 문자 취급
 -> {{@/}} 계층에서 / 기준으로 함수 이름, 함수 파라미터로 나뉨
 -> {{$}} 계층 안에 있으면 변수 이름